{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./LoginForm.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginForm=_ref=>{let{setUserProfile}=_ref;const[formData,setFormData]=useState({email:'',password:''});const[errorMessage,setErrorMessage]=useState('');const[loading,setLoading]=useState(false);const navigate=useNavigate();const handleInputChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});};const handleSubmit=async e=>{e.preventDefault();setErrorMessage('');if(!formData.email||!formData.password){setErrorMessage('Заполните все поля');return;}setLoading(true);try{// Отправляем запрос на авторизацию\nconst response=await fetch('http://localhost:5000/api/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});if(!response.ok){const result=await response.json();setErrorMessage(result.message||'Ошибка на сервере');return;}// Получаем токен\nconst{token}=await response.json();// Логируем токен\nconsole.log('Получен токен:',token);// Сохраняем токен в localStorage\nlocalStorage.setItem('token',token);// Запрашиваем профиль пользователя с использованием токена\nconst profileResponse=await fetch('http://localhost:5000/api/profile',{method:'GET',headers:{Authorization:`Bearer ${token}`}});if(!profileResponse.ok){const profileError=await profileResponse.json();setErrorMessage(profileError.message||'Ошибка при загрузке профиля');return;}// Сохраняем профиль пользователя в localStorage\nconst userProfile=await profileResponse.json();// Логируем профиль пользователя\nconsole.log('Получен профиль пользователя:',userProfile);localStorage.setItem('userProfile',JSON.stringify(userProfile));// Передаем профиль в родительский компонент\nsetUserProfile(userProfile);// Перенаправляем на страницу профиля\nnavigate('/profile');}catch(error){console.error('Ошибка при подключении к серверу:',error);setErrorMessage('Ошибка при подключении к серверу');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0412\\u0445\\u043E\\u0434 \\u0432 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\"}),errorMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errorMessage}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-item\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"email\",type:\"email\",name:\"email\",value:formData.email,onChange:handleInputChange,placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 email\",required:true,autoFocus:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-item\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"password\",type:\"password\",name:\"password\",value:formData.password,onChange:handleInputChange,placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-button\",disabled:loading,children:loading?'Загрузка...':'Войти'})]})]});};export default LoginForm;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","LoginForm","_ref","setUserProfile","formData","setFormData","email","password","errorMessage","setErrorMessage","loading","setLoading","navigate","handleInputChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","result","json","message","token","console","log","localStorage","setItem","profileResponse","Authorization","profileError","userProfile","error","className","children","onSubmit","htmlFor","id","type","onChange","placeholder","required","autoFocus","disabled"],"sources":["C:/Users/79818/shop1/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginForm.css';\r\n\r\nconst LoginForm = ({ setUserProfile }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage('');\r\n\r\n    if (!formData.email || !formData.password) {\r\n      setErrorMessage('Заполните все поля');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Отправляем запрос на авторизацию\r\n      const response = await fetch('http://localhost:5000/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const result = await response.json();\r\n        setErrorMessage(result.message || 'Ошибка на сервере');\r\n        return;\r\n      }\r\n\r\n      // Получаем токен\r\n      const { token } = await response.json();\r\n\r\n      // Логируем токен\r\n      console.log('Получен токен:', token);\r\n\r\n      // Сохраняем токен в localStorage\r\n      localStorage.setItem('token', token);\r\n\r\n      // Запрашиваем профиль пользователя с использованием токена\r\n      const profileResponse = await fetch('http://localhost:5000/api/profile', {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (!profileResponse.ok) {\r\n        const profileError = await profileResponse.json();\r\n        setErrorMessage(profileError.message || 'Ошибка при загрузке профиля');\r\n        return;\r\n      }\r\n\r\n      // Сохраняем профиль пользователя в localStorage\r\n      const userProfile = await profileResponse.json();\r\n\r\n      // Логируем профиль пользователя\r\n      console.log('Получен профиль пользователя:', userProfile);\r\n\r\n      localStorage.setItem('userProfile', JSON.stringify(userProfile));\r\n\r\n      // Передаем профиль в родительский компонент\r\n      setUserProfile(userProfile);\r\n\r\n      // Перенаправляем на страницу профиля\r\n      navigate('/profile');\r\n    } catch (error) {\r\n      console.error('Ошибка при подключении к серверу:', error);\r\n      setErrorMessage('Ошибка при подключении к серверу');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form-container\">\r\n      <h2>Вход в профиль</h2>\r\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Введите ваш email\"\r\n            required\r\n            autoFocus\r\n          />\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <label htmlFor=\"password\">Пароль:</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Введите ваш пароль\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n          {loading ? 'Загрузка...' : 'Войти'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
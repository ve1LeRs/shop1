{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./Register.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=()=>{const[formData,setFormData]=useState({name:'',email:'',password:''});const[error,setError]=useState('');const[loading,setLoading]=useState(false);// Стейт для отслеживания загрузки\nconst navigate=useNavigate();const handleInputChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});};const handleSubmit=async e=>{e.preventDefault();setError('');// Сброс ошибки перед новым запросом\nsetLoading(true);// Включаем индикатор загрузки\n// Проверка на пустые поля\nif(!formData.name||!formData.email||!formData.password){setError('Пожалуйста, заполните все поля');setLoading(false);return;}try{const response=await fetch('http://localhost:5000/api/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});const result=await response.json();if(response.ok){navigate('/login');// После успешной регистрации переходим на страницу логина\n}else{setError(result.message);// Ошибка при регистрации\n}}catch(error){setError('Ошибка при подключении к серверу');console.error(error);}finally{setLoading(false);// Останавливаем индикатор загрузки\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"register-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,onChange:handleInputChange,placeholder:\"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleInputChange,placeholder:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleInputChange,placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Загрузка...':'Зарегистрироваться'})]})]});};export default Register;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Register","formData","setFormData","name","email","password","error","setError","loading","setLoading","navigate","handleInputChange","e","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","message","console","className","children","onSubmit","type","onChange","placeholder","disabled"],"sources":["C:/Users/79818/shop1/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Register.css';\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false); // Стейт для отслеживания загрузки\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(''); // Сброс ошибки перед новым запросом\r\n    setLoading(true); // Включаем индикатор загрузки\r\n\r\n    // Проверка на пустые поля\r\n    if (!formData.name || !formData.email || !formData.password) {\r\n      setError('Пожалуйста, заполните все поля');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        navigate('/login'); // После успешной регистрации переходим на страницу логина\r\n      } else {\r\n        setError(result.message); // Ошибка при регистрации\r\n      }\r\n    } catch (error) {\r\n      setError('Ошибка при подключении к серверу');\r\n      console.error(error);\r\n    } finally {\r\n      setLoading(false); // Останавливаем индикатор загрузки\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-form\">\r\n      <h2>Регистрация</h2>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Ваше имя\"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Пароль\"\r\n        />\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Загрузка...' : 'Зарегистрироваться'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79818\\\\shop1\\\\src\\\\components\\\\UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './UserProfile.css'; // Убедитесь, что путь правильный\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const [user, setUser] = useState({\n    name: '',\n    email: ''\n  });\n  const [newName, setNewName] = useState('');\n  const [newEmail, setNewEmail] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    fetch('/api/profile', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      setUser(data);\n    });\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    fetch('/api/update-profile', {\n      method: 'POST',\n      body: JSON.stringify({\n        name: newName,\n        email: newEmail\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      alert('Профиль обновлен');\n      setUser(data);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041C\\u043E\\u0439 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0418\\u043C\\u044F: \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newName,\n        onChange: e => setNewName(e.target.value),\n        placeholder: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u0438\\u043C\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: newEmail,\n        onChange: e => setNewEmail(e.target.value),\n        placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"nF52C8u7YyOIlQDiGA6laPKUKl4=\");\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserProfile","_s","user","setUser","name","email","newName","setNewName","newEmail","setNewEmail","token","localStorage","getItem","fetch","headers","Authorization","then","response","json","data","handleSubmit","e","preventDefault","method","body","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/79818/shop1/src/components/UserProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './UserProfile.css'; // Убедитесь, что путь правильный\r\nconst UserProfile = () => {\r\n  const [user, setUser] = useState({ name: '', email: '' });\r\n  const [newName, setNewName] = useState('');\r\n  const [newEmail, setNewEmail] = useState('');\r\n  \r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    fetch('/api/profile', {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setUser(data);\r\n      });\r\n  }, []);\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n    fetch('/api/update-profile', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ name: newName, email: newEmail }),\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        alert('Профиль обновлен');\r\n        setUser(data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Мой профиль</h1>\r\n      <p>Имя: {user.name}</p>\r\n      <p>Email: {user.email}</p>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={newName} onChange={(e) => setNewName(e.target.value)} placeholder=\"Новое имя\" />\r\n        <input type=\"email\" value={newEmail} onChange={(e) => setNewEmail(e.target.value)} placeholder=\"Новый email\" />\r\n        <button type=\"submit\">Обновить</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}